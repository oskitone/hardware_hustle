.turn {
  height: fit-content;
  break-inside: avoid;

  font-size: inherit;
}

.thead .th,
.tbody {
  margin: 0 0 0.25em;
}

.tbody:last-of-type {
  margin-bottom: 0;
}

.tr {
  display: grid;
  grid-template-columns: calc(1em + 0.5em) repeat(5, minmax(0, 1fr));
}

/* NOTE: Eyeballed to fill page */
/* Ideally it's extracted into parent component so individual uses
   can have arbitrary/implicit heights but that is some work to do. */
.tbody .th,
.td {
  height: calc(var(--default-font-size) * 1.34);
}

.zine .tbody .th,
.zine .td {
  height: calc(var(--default-font-size) * 1.19);
}

.autoHeight .tbody .th,
.autoHeight .td {
  height: auto;
}

.handwritten {
  font-family: var(--font-handwriting);
  font-size: 1.5em;
}

.thead .th {
  font-weight: bold;
  line-height: 0.75;
  text-transform: uppercase;
  text-align: center;
  font-size: 0.85em;
}

.day {
  position: relative;
  font-weight: inherit;
  padding-right: 0.5em;
  display: flex;
}

.day span {
  background: rgb(var(--foreground-rgb));
  color: rgb(var(--background-rgb));

  font-size: 0.8em;

  line-height: 0.9em;
  border-radius: var(--fillet);
  outline: 0.25em solid rgb(var(--foreground-rgb));

  flex: 1;
}

.td {
  background-color: rgb(var(--background-rgb)); /* for border overlap coverup */

  border: 1px solid rgb(var(--foreground-rgb));
  border-width: 1px 1px 0;
  margin: 0 0 -1px -1px;

  position: relative; /* for prefix containment */
}

.tbody .tr:last-of-type .td,
.standalone {
  border-bottom-width: 1px;
}

.standalone {
  max-width: 2em;
}

.td,
.tbody .th {
  line-height: 1;

  display: flex;
  align-items: center;
  justify-content: center;
}

.tbody .th {
  padding: 0 0.5em 0 0;
}

.topLeft {
  border-top-left-radius: var(--fillet);
}

.topRight {
  border-top-right-radius: var(--fillet);
}

.bottomLeft {
  border-bottom-left-radius: var(--fillet);
}

.bottomRight {
  border-bottom-right-radius: var(--fillet);
}

.equals {
  border-color: rgb(var(--foreground-rgb));
}

.inactive {
  background: rgb(var(--inactive-rgb));
}

.td[prefix]:before {
  font-family: monospace;
  position: absolute;
  left: 0.2em;
  pointer-events: none;
  font-size: calc(1em * 0.75);
  font-weight: 100;
}

.td[prefix]:before {
  content: attr(prefix);
}

.success:after,
.fail:after {
  content: "O";
  font-family: var(--font-handwriting);
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  text-align: center;
  pointer-events: none;
  font-size: 3.5em;
  line-height: 16px;
}

.fail:after {
  content: "X";
  left: 0.18em; /* Off center to not obscure text */
}
